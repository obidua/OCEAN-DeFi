import{bG as l,ce as p,d7 as w,R as A,bc as y,bj as g,K as b,J as F,bg as E,bA as N,P as h,Q as P,Z as R,d8 as f,d9 as I}from"./index-BW9rm6a1.js";function G(n){const{abi:r,data:a}=n,e=l(a,0,4),t=r.find(o=>o.type==="function"&&e===p(w(o)));if(!t)throw new A(e,{docsPath:"/docs/contract/decodeFunctionData"});return{functionName:t.name,args:"inputs"in t&&t.inputs&&t.inputs.length>0?y(t.inputs,l(a,4)):void 0}}const u="/docs/contract/encodeErrorResult";function m(n){const{abi:r,errorName:a,args:e}=n;let t=r[0];if(a){const c=g({abi:r,args:e,name:a});if(!c)throw new b(a,{docsPath:u});t=c}if(t.type!=="error")throw new b(void 0,{docsPath:u});const o=w(t),s=p(o);let i="0x";if(e&&e.length>0){if(!t.inputs)throw new F(t.name,{docsPath:u});i=E(t.inputs,e)}return N([s,i])}const d="/docs/contract/encodeFunctionResult";function q(n){const{abi:r,functionName:a,result:e}=n;let t=r[0];if(a){const s=g({abi:r,name:a});if(!s)throw new h(a,{docsPath:d});t=s}if(t.type!=="function")throw new h(void 0,{docsPath:d});if(!t.outputs)throw new P(t.name,{docsPath:d});const o=(()=>{if(t.outputs.length===0)return[];if(t.outputs.length===1)return[e];if(Array.isArray(e))return e;throw new R(e)})();return E(t.outputs,o)}const x="x-batch-gateway:true";async function H(n){const{data:r,ccipRequest:a}=n,{args:[e]}=G({abi:f,data:r}),t=[],o=[];return await Promise.all(e.map(async(s,i)=>{try{o[i]=s.urls.includes(x)?await H({data:s.data,ccipRequest:a}):await a(s),t[i]=!1}catch(c){t[i]=!0,o[i]=M(c)}})),q({abi:f,functionName:"query",result:[t,o]})}function M(n){return n.name==="HttpRequestError"&&n.status?m({abi:f,errorName:"HttpError",args:[n.status,n.shortMessage]}):m({abi:[I],errorName:"Error",args:["shortMessage"in n?n.shortMessage:n.message]})}export{q as a,H as b,G as d,m as e,x as l};
